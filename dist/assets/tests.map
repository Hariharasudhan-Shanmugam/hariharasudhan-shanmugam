{"version":3,"sources":["vendor/ember-cli/tests-prefix.js","user-directory/tests/app.lint-test.js","user-directory/tests/integration/components/file-upload-test.js","user-directory/tests/integration/components/list-of-users.js","user-directory/tests/test-helper.js","user-directory/tests/tests.lint-test.js","user-directory/tests/unit/controllers/application-test.js","user-directory/tests/unit/routes/application-test.js","vendor/ember-cli/app-config.js","vendor/ember-cli/tests-suffix.js"],"sourcesContent":["'use strict';\n","define('user-directory/tests/app.lint-test', [], function () {\n  'use strict';\n\n  QUnit.module('ESLint | app');\n\n  QUnit.test('app.js', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'app.js should pass ESLint\\n\\n');\n  });\n\n  QUnit.test('components/file-upload.js', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'components/file-upload.js should pass ESLint\\n\\n');\n  });\n\n  QUnit.test('controllers/application.js', function (assert) {\n    assert.expect(1);\n    assert.ok(false, 'controllers/application.js should pass ESLint\\n\\n14:11 - Unexpected console statement. (no-console)\\n23:9 - Unexpected console statement. (no-console)');\n  });\n\n  QUnit.test('resolver.js', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'resolver.js should pass ESLint\\n\\n');\n  });\n\n  QUnit.test('router.js', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'router.js should pass ESLint\\n\\n');\n  });\n\n  QUnit.test('routes/application.js', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'routes/application.js should pass ESLint\\n\\n');\n  });\n});","define('user-directory/tests/integration/components/file-upload-test', ['qunit', 'ember-qunit', '@ember/test-helpers'], function (_qunit, _emberQunit, _testHelpers) {\n  'use strict';\n\n  (0, _qunit.module)('Integration | Component | file-upload', function (hooks) {\n    (0, _emberQunit.setupRenderingTest)(hooks);\n\n    (0, _qunit.test)('it renders', async function (assert) {\n      // Set any properties with this.set('myProperty', 'value');\n      // Handle any actions with this.set('myAction', function(val) { ... });\n\n      await (0, _testHelpers.render)(Ember.HTMLBars.template({\n        \"id\": \"aj90Kxhq\",\n        \"block\": \"{\\\"symbols\\\":[],\\\"statements\\\":[[1,[18,\\\"file-upload\\\"],false]],\\\"hasEval\\\":false}\",\n        \"meta\": {}\n      }));\n\n      assert.equal(this.element.textContent.trim(), '');\n\n      // Template block usage:\n      await (0, _testHelpers.render)(Ember.HTMLBars.template({\n        \"id\": \"YyP7xmNI\",\n        \"block\": \"{\\\"symbols\\\":[],\\\"statements\\\":[[0,\\\"\\\\n\\\"],[4,\\\"file-upload\\\",null,null,{\\\"statements\\\":[[0,\\\"        template block text\\\\n\\\"]],\\\"parameters\\\":[]},null],[0,\\\"    \\\"]],\\\"hasEval\\\":false}\",\n        \"meta\": {}\n      }));\n\n      assert.equal(this.element.textContent.trim(), 'template block text');\n    });\n  });\n});","define('user-directory/tests/integration/components/list-of-users', ['qunit', 'ember-qunit', '@ember/test-helpers'], function (_qunit, _emberQunit, _testHelpers) {\n  'use strict';\n\n  (0, _qunit.module)('Integration | Component | list-of-users', function (hooks) {\n\n    (0, _emberQunit.setupRenderingTest)(hooks);\n\n    (0, _qunit.test)('it renders', async function (assert) {\n\n      const userDataTest = [{\n\n        \"login\": \"mojombo\",\n\n        \"id\": 1,\n\n        \"node_id\": \"MDQ6VXNlcjE=\",\n\n        \"avatar_url\": \"https://avatars0.githubusercontent.com/u/1?v=4\",\n\n        \"gravatar_id\": \"\",\n\n        \"url\": \"https://api.github.com/users/mojombo\",\n\n        \"html_url\": \"https://github.com/mojombo\",\n\n        \"followers_url\": \"https://api.github.com/users/mojombo/followers\",\n\n        \"following_url\": \"https://api.github.com/users/mojombo/following{/other_user}\",\n\n        \"gists_url\": \"https://api.github.com/users/mojombo/gists{/gist_id}\",\n\n        \"starred_url\": \"https://api.github.com/users/mojombo/starred{/owner}{/repo}\",\n\n        \"subscriptions_url\": \"https://api.github.com/users/mojombo/subscriptions\",\n\n        \"organizations_url\": \"https://api.github.com/users/mojombo/orgs\",\n\n        \"repos_url\": \"https://api.github.com/users/mojombo/repos\",\n\n        \"events_url\": \"https://api.github.com/users/mojombo/events{/privacy}\",\n\n        \"received_events_url\": \"https://api.github.com/users/mojombo/received_events\",\n\n        \"type\": \"User\",\n\n        \"site_admin\": false\n\n      }, {\n\n        \"login\": \"defunkt\",\n\n        \"id\": 2,\n\n        \"node_id\": \"MDQ6VXNlcjI=\",\n\n        \"avatar_url\": \"https://avatars0.githubusercontent.com/u/2?v=4\",\n\n        \"gravatar_id\": \"\",\n\n        \"url\": \"https://api.github.com/users/defunkt\",\n\n        \"html_url\": \"https://github.com/defunkt\",\n\n        \"followers_url\": \"https://api.github.com/users/defunkt/followers\",\n\n        \"following_url\": \"https://api.github.com/users/defunkt/following{/other_user}\",\n\n        \"gists_url\": \"https://api.github.com/users/defunkt/gists{/gist_id}\",\n\n        \"starred_url\": \"https://api.github.com/users/defunkt/starred{/owner}{/repo}\",\n\n        \"subscriptions_url\": \"https://api.github.com/users/defunkt/subscriptions\",\n\n        \"organizations_url\": \"https://api.github.com/users/defunkt/orgs\",\n\n        \"repos_url\": \"https://api.github.com/users/defunkt/repos\",\n\n        \"events_url\": \"https://api.github.com/users/defunkt/events{/privacy}\",\n\n        \"received_events_url\": \"https://api.github.com/users/defunkt/received_events\",\n\n        \"type\": \"User\",\n\n        \"site_admin\": true\n\n      }];\n\n      assert.expect(1);\n\n      await (0, _testHelpers.render)(Ember.HTMLBars.template({\n        \"id\": \"nVkxAjQL\",\n        \"block\": \"{\\\"symbols\\\":[],\\\"statements\\\":[[1,[25,\\\"list-of-users\\\",null,[[\\\"userData\\\",\\\"onToShortlistRoute\\\",\\\"onClickofUser\\\"],[[20,[\\\"model\\\",\\\"userData\\\"]],\\\"onToShortlistRoute\\\",\\\"onClickofUser\\\"]]],false]],\\\"hasEval\\\":false}\",\n        \"meta\": {}\n      }));\n      assert.equal(userDataTest, userData, 'userData is fetched');\n    });\n  });\n});","define('user-directory/tests/test-helper', ['user-directory/app', 'user-directory/config/environment', '@ember/test-helpers', 'ember-qunit'], function (_app, _environment, _testHelpers, _emberQunit) {\n  'use strict';\n\n  (0, _testHelpers.setApplication)(_app.default.create(_environment.default.APP));\n\n  (0, _emberQunit.start)();\n});","define('user-directory/tests/tests.lint-test', [], function () {\n  'use strict';\n\n  QUnit.module('ESLint | tests');\n\n  QUnit.test('integration/components/file-upload-test.js', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'integration/components/file-upload-test.js should pass ESLint\\n\\n');\n  });\n\n  QUnit.test('integration/components/list-of-users.js', function (assert) {\n    assert.expect(1);\n    assert.ok(false, 'integration/components/list-of-users.js should pass ESLint\\n\\n100:34 - \\'userData\\' is not defined. (no-undef)');\n  });\n\n  QUnit.test('test-helper.js', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'test-helper.js should pass ESLint\\n\\n');\n  });\n\n  QUnit.test('unit/controllers/application-test.js', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'unit/controllers/application-test.js should pass ESLint\\n\\n');\n  });\n\n  QUnit.test('unit/routes/application-test.js', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'unit/routes/application-test.js should pass ESLint\\n\\n');\n  });\n});","define('user-directory/tests/unit/controllers/application-test', ['qunit', 'ember-qunit'], function (_qunit, _emberQunit) {\n  'use strict';\n\n  (0, _qunit.module)('Unit | Controller | application', function (hooks) {\n    (0, _emberQunit.setupTest)(hooks);\n\n    // Replace this with your real tests.\n    (0, _qunit.test)('it exists', function (assert) {\n      let controller = this.owner.lookup('controller:application');\n      assert.ok(controller);\n    });\n  });\n});","define('user-directory/tests/unit/routes/application-test', ['qunit', 'ember-qunit'], function (_qunit, _emberQunit) {\n  'use strict';\n\n  (0, _qunit.module)('Unit | Route | application', function (hooks) {\n    (0, _emberQunit.setupTest)(hooks);\n\n    (0, _qunit.test)('it exists', function (assert) {\n      let route = this.owner.lookup('route:application');\n      assert.ok(route);\n    });\n  });\n});","define('user-directory/config/environment', [], function() {\n  var prefix = 'user-directory';\ntry {\n  var metaName = prefix + '/config/environment';\n  var rawConfig = document.querySelector('meta[name=\"' + metaName + '\"]').getAttribute('content');\n  var config = JSON.parse(unescape(rawConfig));\n\n  var exports = { 'default': config };\n\n  Object.defineProperty(exports, '__esModule', { value: true });\n\n  return exports;\n}\ncatch(err) {\n  throw new Error('Could not read config from meta tag with name \"' + metaName + '\".');\n}\n\n});\n","require('user-directory/tests/test-helper');\nEmberENV.TESTS_FILE_LOADED = true;\n"],"names":[],"mappings":"AAAA;;ACAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACjhGA;AACA;AACA;AACA;AACA;AACA;;ACLA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AC5BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACXA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACVA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACjBA;AACA;","file":"tests.js"}